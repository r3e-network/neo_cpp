digraph "neo::wallets::nep6::NEP6Wallet::ImportFromNEP2"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::wallets::nep6\l::NEP6Wallet::ImportFromNEP2",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Imports an account from a NEP2 key."];
  Node1 -> Node2 [id="edge19_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::wallets::Wallet\l::AddAccount",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1wallets_1_1_wallet.html#ae556a83f47da99d20e810980225a2e33",tooltip="Adds an account."];
  Node1 -> Node3 [id="edge20_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::smartcontract\l::Contract::CreateSignature\lContract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1_contract.html#aefcd47bce6e6dc289ce3d544c0b7449e",tooltip="Creates a contract from a public key."];
  Node3 -> Node4 [id="edge21_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::smartcontract\l::Contract::Contract",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1_contract.html#af679d851a99668f6be59bb27a34498c3",tooltip="Constructs an empty Contract."];
  Node4 -> Node4 [id="edge22_Node000004_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node5 [id="edge23_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::io::ByteVector\l::insert",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a2d7a8711fbe8b4351fd18b7a45314de5",tooltip="Inserts data at the specified position."];
  Node5 -> Node6 [id="edge24_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::io::ByteVector\l::size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#aa810a2a94af643c2ec1e2400da53d3d7",tooltip="Gets the size of the ByteVector (STL compatibility)."];
  Node3 -> Node7 [id="edge25_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node7 -> Node8 [id="edge26_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node8 -> Node9 [id="edge27_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node1 -> Node10 [id="edge28_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::cryptography::\lecc::Secp256r1::FromNEP2",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_secp256r1.html#aae542d30ec1b56f0215817fffb7d61de",tooltip="Create private key from NEP2 format (decrypt)"];
  Node10 -> Node11 [id="edge29_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::cryptography::\lecc::Secp256r1::DecryptPrivateKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_secp256r1.html#a8563367ac57392149dd95c1fa7eda732",tooltip="Decrypt private key from WIF format."];
  Node11 -> Node12 [id="edge30_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::cryptography::\lBase58::Decode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_base58.html#a063133b21ab7c5bf5f7ed7fc153015b0",tooltip="Decode Base58 string to bytes."];
  Node11 -> Node13 [id="edge31_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::cryptography::\lHash::Sha256",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_hash.html#a45b12e21ad2391d1919f3eb7b61f683a",tooltip="Computes SHA256 hash."];
  Node13 -> Node14 [id="edge32_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node13 -> Node15 [id="edge33_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node1 -> Node16 [id="edge34_Node000001_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::cryptography::\lecc::Secp256r1::FromPrivateKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_secp256r1.html#a0267502301ecac58d88587895e8ea580",tooltip="Create key pair from private key."];
  Node16 -> Node17 [id="edge35_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::cryptography::\lecc::Secp256r1::IsValidPrivateKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_secp256r1.html#aaa9d4700c82e1f69d64e647cc3bd11ff",tooltip="Validate private key."];
  Node17 -> Node6 [id="edge36_Node000017_Node000006",color="steelblue1",style="solid",tooltip=" "];
}
