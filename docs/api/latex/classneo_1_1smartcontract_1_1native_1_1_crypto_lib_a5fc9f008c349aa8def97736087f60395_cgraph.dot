digraph "neo::smartcontract::native::CryptoLib::OnVerifyWithECDsa"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::native::CryptoLib\l::OnVerifyWithECDsa",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Handles the verifyWithECDsa method."];
  Node1 -> Node2 [id="edge47_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::vm::StackItem\l::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#a1d67a8c02d58d56410378b997c2e7855",tooltip="Creates a primitive stack item."];
  Node2 -> Node3 [id="edge48_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::vm::StackItem\l::False",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#a759c1a70f6481936eb089083a5fa2d4e",tooltip="Gets the false stack item."];
  Node2 -> Node4 [id="edge49_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::vm::StackItem\l::True",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#ac5c88a02b66663d80e61942bb425391c",tooltip="Gets the true stack item."];
  Node1 -> Node5 [id="edge50_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::cryptography::\lecc::ECPoint::Parse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1c75d3fc7ae853e91db5d592b39a2ebb",tooltip="Parses an ECPoint from a hex string."];
  Node5 -> Node6 [id="edge51_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node5 -> Node7 [id="edge52_Node000005_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::cryptography::\lecc::ECPoint::FromHex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#aee2f331e27180796eeaea7f7a195c7e4",tooltip="Creates an ECPoint from a hex string."];
  Node7 -> Node6 [id="edge53_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node7 -> Node8 [id="edge54_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node8 -> Node9 [id="edge55_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node8 -> Node10 [id="edge56_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node8 -> Node11 [id="edge57_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node8 -> Node6 [id="edge58_Node000008_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node12 [id="edge59_Node000008_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node8 -> Node13 [id="edge60_Node000008_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node8 -> Node14 [id="edge61_Node000008_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node8 -> Node15 [id="edge62_Node000008_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node7 -> Node16 [id="edge63_Node000007_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::io::ByteVector\l::Parse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a242d1da5fa393beea8d3f0a8cd14497b",tooltip="Parses a hexadecimal string into a ByteVector."];
  Node16 -> Node17 [id="edge64_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::io::ByteVector\l::ByteVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a8428939dbf8d0f3bf4047d1e2ee4e7a2",tooltip="Constructs an empty ByteVector."];
  Node1 -> Node18 [id="edge65_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::smartcontract\l::native::CryptoLib\l::VerifySecp256k1Signature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_crypto_lib.html#aaf9ce97058cd37b684d8ee12dec87fdc",tooltip=" "];
  Node18 -> Node9 [id="edge66_Node000018_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node19 [id="edge67_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::smartcontract\l::native::CryptoLib\l::IsValidSecp256k1PublicKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_crypto_lib.html#a10f05dacf8f94a967f1e17ee2e096522",tooltip=" "];
  Node19 -> Node20 [id="edge68_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node20 -> Node21 [id="edge69_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node21 -> Node11 [id="edge70_Node000021_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node22 [id="edge71_Node000018_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="neo::smartcontract\l::native::CryptoLib\l::ParseSecp256k1Signature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_crypto_lib.html#a2477f7f4b64059240d885a1f071dc755",tooltip=" "];
  Node22 -> Node11 [id="edge72_Node000022_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node22 -> Node23 [id="edge73_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="neo::io::ByteVector\l::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#ac0d1a1751d25fde82c44ba55d9d68e24",tooltip="Gets the size of the ByteVector."];
  Node18 -> Node24 [id="edge74_Node000018_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="neo::cryptography::\lHash::Sha256",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_hash.html#a45b12e21ad2391d1919f3eb7b61f683a",tooltip="Computes SHA256 hash."];
  Node24 -> Node10 [id="edge75_Node000024_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node24 -> Node15 [id="edge76_Node000024_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node23 [id="edge77_Node000018_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node18 -> Node25 [id="edge78_Node000018_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="neo::smartcontract\l::native::CryptoLib\l::VerifySecp256k1ECDSA",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_crypto_lib.html#a08e6f3f57440ad6849b69f64aa4c911f",tooltip=" "];
  Node25 -> Node26 [id="edge79_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="neo::io::ByteVector\l::Append",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a08fe2080218bc11daedc416387e6f37e",tooltip="Appends data to the ByteVector."];
  Node26 -> Node10 [id="edge80_Node000026_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node26 -> Node15 [id="edge81_Node000026_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node9 [id="edge82_Node000025_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node11 [id="edge83_Node000025_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node27 [id="edge84_Node000025_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="neo::io::UInt256::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int256.html#a2882356c1c3af5d8281ff406155890fd",tooltip="Gets a pointer to the data."];
  Node25 -> Node28 [id="edge85_Node000025_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="neo::smartcontract\l::native::CryptoLib\l::IsZero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_crypto_lib.html#a76a46e6ed2a4621687f2dfa0c619e311",tooltip=" "];
  Node25 -> Node29 [id="edge86_Node000025_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="neo::io::ByteVector\l::Push",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a57eb840afcbc9cd7b784081f9f546dab",tooltip="Pushes a byte to the end of the ByteVector."];
  Node25 -> Node23 [id="edge87_Node000025_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node30 [id="edge88_Node000025_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="neo::cryptography::\lCrypto::VerifySignature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_crypto.html#ab8f7b7fd3cbef11030acce3439ea5800",tooltip="Verifies a signature."];
  Node30 -> Node10 [id="edge89_Node000030_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node15 [id="edge90_Node000030_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node30 -> Node20 [id="edge91_Node000030_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node30 [id="edge92_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
}
