digraph "neo::smartcontract::native::RoleManagement::GetDesignatedByRole"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::native::RoleManagement\l::GetDesignatedByRole",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Gets the designated by role."];
  Node1 -> Node2 [id="edge33_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::smartcontract\l::native::RoleManagement\l::CreateStorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_role_management.html#a7b9d0c964ffaf9e62e2f37bc15d7acbe",tooltip="Creates a storage key for a role."];
  Node2 -> Node3 [id="edge34_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::smartcontract\l::native::NativeContract\l::CreateStorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#a5a9ec24cc4c1584fb00fdf32f614dbd8",tooltip="Creates a storage key with the specified prefix."];
  Node3 -> Node4 [id="edge35_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::persistence::Storage\lKey::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#ae7001770e96642cfdb2f878c6264bf51",tooltip="Creates a storage key with contract ID and prefix."];
  Node4 -> Node5 [id="edge36_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::persistence::Storage\lKey::FillHeader",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a4a6ee8a47d7cfb0b3802d3697ddf571f",tooltip="Fills the header (contract ID + prefix) into a span."];
  Node4 -> Node6 [id="edge37_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::persistence::Storage\lKey::StorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a26e71bde9629f81837c84d69d83fd75a",tooltip="Constructs an empty StorageKey."];
  Node1 -> Node7 [id="edge38_Node000001_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::smartcontract\l::native::NodeList::\lDeserialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_node_list.html#a4d391f7dc08813d287a1ebf61e78df6d",tooltip="Deserializes the list from a binary reader."];
  Node7 -> Node8 [id="edge39_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node8 -> Node9 [id="edge40_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node8 -> Node10 [id="edge41_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node8 -> Node11 [id="edge42_Node000008_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node8 -> Node12 [id="edge43_Node000008_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node8 -> Node13 [id="edge44_Node000008_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node8 -> Node14 [id="edge45_Node000008_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node8 -> Node15 [id="edge46_Node000008_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node8 -> Node16 [id="edge47_Node000008_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node7 -> Node17 [id="edge48_Node000007_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::io::BinaryReader\l::ReadVarBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a62705ff1d1117525166b6d22c68935d4",tooltip="Reads a variable-length byte array from the stream."];
  Node17 -> Node18 [id="edge49_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::io::BinaryReader\l::ReadBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#aaa4a5f7dcf558723668d35b0b31f93f1",tooltip="Reads a byte array from the stream."];
  Node18 -> Node19 [id="edge50_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::io::BinaryReader\l::EnsureAvailable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a2bfd19e979fbdb9b340cc8dd78a9ca72",tooltip="Checks if enough bytes are available to read."];
  Node18 -> Node20 [id="edge51_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::io::BinaryReader\l::ReadRawBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a890faf334a0500b4474a6b2f91e63e51",tooltip="Helper method to read raw bytes from either stream or memory."];
  Node20 -> Node19 [id="edge52_Node000020_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node21 [id="edge53_Node000017_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::io::BinaryReader\l::ReadVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#af83b01f86939c82755926ff3bac86458",tooltip="Reads a variable-length integer from the stream."];
  Node21 -> Node22 [id="edge54_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="neo::io::BinaryReader\l::ReadUInt16",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a52c58b790f36327c1c7a11d0f3cfb5c2",tooltip="Reads a 16-bit unsigned integer from the stream."];
  Node22 -> Node20 [id="edge55_Node000022_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node23 [id="edge56_Node000021_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="neo::io::BinaryReader\l::ReadUInt32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#adc2c9cfae535b86f63855d77cdb2662b",tooltip="Reads a 32-bit unsigned integer from the stream."];
  Node23 -> Node20 [id="edge57_Node000023_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node24 [id="edge58_Node000021_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="neo::io::BinaryReader\l::ReadUInt64",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#add3fc78c751d4893aaf0193e0a357dbd",tooltip="Reads a 64-bit unsigned integer from the stream."];
  Node24 -> Node20 [id="edge59_Node000024_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node21 -> Node25 [id="edge60_Node000021_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="neo::io::BinaryReader\l::ReadUInt8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a3b93ff9ad86d70fb5091267936092a59",tooltip="Reads an 8-bit unsigned integer from the stream."];
  Node7 -> Node21 [id="edge61_Node000007_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node26 [id="edge62_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="neo::smartcontract\l::native::NativeContract\l::GetStorageValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#aa8eed221a7bf2bce103f7e1fef187e6c",tooltip="Gets the storage value."];
  Node26 -> Node3 [id="edge63_Node000026_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node27 [id="edge64_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="neo::smartcontract\l::native::NodeList::\lToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_node_list.html#adf8b507fb90baa408ea47b352510f976",tooltip="Converts the list to an array."];
}
