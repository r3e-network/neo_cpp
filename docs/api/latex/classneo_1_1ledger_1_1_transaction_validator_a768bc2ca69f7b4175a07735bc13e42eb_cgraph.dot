digraph "neo::ledger::TransactionValidator::VerifyWitness"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::ledger::Transaction\lValidator::VerifyWitness",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge30_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::network::p2p::\lpayloads::Neo3Transaction\l::GetHash",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1network_1_1p2p_1_1payloads_1_1_neo3_transaction.html#ace06ea36a27942bcb338585d8f8db380",tooltip="Gets the hash of the transaction."];
  Node2 -> Node3 [id="edge31_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::cryptography::\lHash::Sha256",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_hash.html#a45b12e21ad2391d1919f3eb7b61f683a",tooltip="Computes SHA256 hash."];
  Node3 -> Node4 [id="edge32_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node3 -> Node5 [id="edge33_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node2 -> Node6 [id="edge34_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::io::BinaryWriter\l::Write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#ac50767ade20a9099ba7e6b6ed684ef45",tooltip="Writes a boolean value to the stream."];
  Node6 -> Node6 [id="edge35_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node7 [id="edge36_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::io::BinaryWriter\l::WriteVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#a39fc5781e0d7a018ac8a1d86fea0cd4e",tooltip="Writes a variable-length integer to the stream."];
  Node7 -> Node6 [id="edge37_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge38_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::Parse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1c75d3fc7ae853e91db5d592b39a2ebb",tooltip="Parses an ECPoint from a hex string."];
  Node8 -> Node9 [id="edge39_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node8 -> Node10 [id="edge40_Node000008_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::cryptography::\lecc::ECPoint::FromHex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#aee2f331e27180796eeaea7f7a195c7e4",tooltip="Creates an ECPoint from a hex string."];
  Node10 -> Node9 [id="edge41_Node000010_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node11 [id="edge42_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node11 -> Node12 [id="edge43_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node11 -> Node4 [id="edge44_Node000011_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node13 [id="edge45_Node000011_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node11 -> Node9 [id="edge46_Node000011_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node11 -> Node14 [id="edge47_Node000011_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node11 -> Node15 [id="edge48_Node000011_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node11 -> Node16 [id="edge49_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node11 -> Node5 [id="edge50_Node000011_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node10 -> Node17 [id="edge51_Node000010_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::io::ByteVector\l::Parse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a242d1da5fa393beea8d3f0a8cd14497b",tooltip="Parses a hexadecimal string into a ByteVector."];
  Node17 -> Node18 [id="edge52_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::io::ByteVector\l::ByteVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a8428939dbf8d0f3bf4047d1e2ee4e7a2",tooltip="Constructs an empty ByteVector."];
  Node1 -> Node19 [id="edge53_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::cryptography::\lCrypto::VerifySignature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_crypto.html#ab8f7b7fd3cbef11030acce3439ea5800",tooltip="Verifies a signature."];
  Node19 -> Node4 [id="edge54_Node000019_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node5 [id="edge55_Node000019_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node20 [id="edge56_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node20 -> Node21 [id="edge57_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node21 -> Node13 [id="edge58_Node000021_Node000013",color="steelblue1",style="solid",tooltip=" "];
}
