digraph "neo::smartcontract::native::NeoToken::Vote"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::native::NeoToken::Vote",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Votes for a candidate."];
  Node1 -> Node2 [id="edge26_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::smartcontract\l::native::NeoTokenVote::Vote",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_neo_token_vote.html#a9c33f9f84c45eb0716c9cab12306f800",tooltip="Votes for a candidate."];
  Node2 -> Node3 [id="edge27_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::smartcontract\l::native::NativeContract\l::CreateStorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#a5a9ec24cc4c1584fb00fdf32f614dbd8",tooltip="Creates a storage key with the specified prefix."];
  Node3 -> Node4 [id="edge28_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::persistence::Storage\lKey::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#ae7001770e96642cfdb2f878c6264bf51",tooltip="Creates a storage key with contract ID and prefix."];
  Node4 -> Node5 [id="edge29_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::persistence::Storage\lKey::FillHeader",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a4a6ee8a47d7cfb0b3802d3697ddf571f",tooltip="Fills the header (contract ID + prefix) into a span."];
  Node4 -> Node6 [id="edge30_Node000004_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::persistence::Storage\lKey::StorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a26e71bde9629f81837c84d69d83fd75a",tooltip="Constructs an empty StorageKey."];
  Node2 -> Node7 [id="edge31_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::io::UInt160::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#ad3022981ff7dc5b1928972035b8c81e6",tooltip="Gets a pointer to the data."];
  Node2 -> Node8 [id="edge32_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::smartcontract\l::native::NeoTokenAccount\l::GetAccountState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_neo_token_account.html#a6a801203667b97238e73ec31a4eeeb49",tooltip="Gets the account state."];
  Node8 -> Node3 [id="edge33_Node000008_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node8 -> Node9 [id="edge34_Node000008_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::smartcontract\l::native::NeoToken::\lAccountState::Deserialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structneo_1_1smartcontract_1_1native_1_1_neo_token_1_1_account_state.html#aae0ca7841f80d2abf677fa992f375fc7",tooltip=" "];
  Node9 -> Node10 [id="edge35_Node000009_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::BinaryReader\l::ReadInt64",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#aa8429b0320e5dee44f55d511457eb9bb",tooltip="Reads a 64-bit signed integer from the stream."];
  Node10 -> Node11 [id="edge36_Node000010_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::io::BinaryReader\l::ReadRawBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a890faf334a0500b4474a6b2f91e63e51",tooltip="Helper method to read raw bytes from either stream or memory."];
  Node11 -> Node12 [id="edge37_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::io::BinaryReader\l::EnsureAvailable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a2bfd19e979fbdb9b340cc8dd78a9ca72",tooltip="Checks if enough bytes are available to read."];
  Node9 -> Node13 [id="edge38_Node000009_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::io::BinaryReader\l::ReadSerializable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#adfdd39b482480819e993cc3c39a77ec2",tooltip="Reads a serializable object from the stream."];
  Node9 -> Node14 [id="edge39_Node000009_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::io::BinaryReader\l::ReadUInt32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#adc2c9cfae535b86f63855d77cdb2662b",tooltip="Reads a 32-bit unsigned integer from the stream."];
  Node14 -> Node11 [id="edge40_Node000014_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node15 [id="edge41_Node000002_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::smartcontract\l::native::NeoTokenCandidate\l::GetCandidateState",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_neo_token_candidate.html#a8b1144886bf0a59b007b4e1bf406aeb9",tooltip="Gets the candidate state."];
  Node15 -> Node3 [id="edge42_Node000015_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node16 [id="edge43_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::smartcontract\l::native::NeoToken::\lCandidateState::Deserialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$structneo_1_1smartcontract_1_1native_1_1_neo_token_1_1_candidate_state.html#a4b3588cff845e246d112020fcd7b7974",tooltip=" "];
  Node16 -> Node17 [id="edge44_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::io::BinaryReader\l::ReadBool",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a94aba9dfe2eb624fd626466227ccf3a8",tooltip="Reads a boolean value from the stream."];
  Node17 -> Node18 [id="edge45_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::io::BinaryReader\l::ReadUInt8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a3b93ff9ad86d70fb5091267936092a59",tooltip="Reads an 8-bit unsigned integer from the stream."];
  Node16 -> Node10 [id="edge46_Node000016_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node15 -> Node19 [id="edge47_Node000015_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node19 -> Node20 [id="edge48_Node000019_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node20 -> Node21 [id="edge49_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node2 -> Node10 [id="edge50_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
}
