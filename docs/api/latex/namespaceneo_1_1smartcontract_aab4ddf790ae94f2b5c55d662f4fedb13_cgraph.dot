digraph "neo::smartcontract::VerifyMultiSignatureContract"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::VerifyMultiSignatureContract",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge39_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::network::p2p::\lpayloads::Neo3Transaction\l::GetHash",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1network_1_1p2p_1_1payloads_1_1_neo3_transaction.html#ace06ea36a27942bcb338585d8f8db380",tooltip="Gets the hash of the transaction."];
  Node2 -> Node3 [id="edge40_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::cryptography::\lHash::Sha256",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_hash.html#a45b12e21ad2391d1919f3eb7b61f683a",tooltip="Computes SHA256 hash."];
  Node3 -> Node4 [id="edge41_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node3 -> Node5 [id="edge42_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node2 -> Node6 [id="edge43_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::io::BinaryWriter\l::Write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#ac50767ade20a9099ba7e6b6ed684ef45",tooltip="Writes a boolean value to the stream."];
  Node6 -> Node6 [id="edge44_Node000006_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node7 [id="edge45_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::io::BinaryWriter\l::WriteVarInt",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#a39fc5781e0d7a018ac8a1d86fea0cd4e",tooltip="Writes a variable-length integer to the stream."];
  Node7 -> Node6 [id="edge46_Node000007_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge47_Node000001_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::ledger::Witness\l::GetInvocationScript",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1ledger_1_1_witness.html#a3dc2fcb75e37d27b2d4a670b1625eefc",tooltip="Gets the invocation script."];
  Node1 -> Node9 [id="edge48_Node000001_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::io::MemoryStream\l::GetLength",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_memory_stream.html#ae140b09a408ec473dad07e372badbec3",tooltip="Gets the length of the stream."];
  Node1 -> Node10 [id="edge49_Node000001_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::MemoryStream\l::GetPosition",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_memory_stream.html#ae0a4bbc5eb3341fd5e90e129d94d6d13",tooltip="Gets the current position in the stream."];
  Node1 -> Node11 [id="edge50_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::ledger::Witness\l::GetVerificationScript",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1ledger_1_1_witness.html#a412d57ef4501b6f67dd1b126c3d1aafa",tooltip="Gets the verification script."];
  Node1 -> Node12 [id="edge51_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::smartcontract\l::ParseMultiSignatureParams",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespaceneo_1_1smartcontract.html#a1fea1152bd2034b21f06406e4a815ba7",tooltip=" "];
  Node12 -> Node13 [id="edge52_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node13 -> Node14 [id="edge53_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node13 -> Node4 [id="edge54_Node000013_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node15 [id="edge55_Node000013_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node13 -> Node16 [id="edge56_Node000013_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node13 -> Node17 [id="edge57_Node000013_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node13 -> Node18 [id="edge58_Node000013_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node13 -> Node19 [id="edge59_Node000013_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node13 -> Node5 [id="edge60_Node000013_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node9 [id="edge61_Node000012_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node10 [id="edge62_Node000012_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node20 [id="edge63_Node000012_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::io::BinaryReader\l::ReadByte",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#acdcfcae157144bbbc188ff8bf00cd55d",tooltip="Reads a single byte from the stream."];
  Node20 -> Node21 [id="edge64_Node000020_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::io::BinaryReader\l::ReadUInt8",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a3b93ff9ad86d70fb5091267936092a59",tooltip="Reads an 8-bit unsigned integer from the stream."];
  Node12 -> Node22 [id="edge65_Node000012_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="neo::io::BinaryReader\l::ReadBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#aaa4a5f7dcf558723668d35b0b31f93f1",tooltip="Reads a byte array from the stream."];
  Node22 -> Node23 [id="edge66_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="neo::io::BinaryReader\l::EnsureAvailable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a2bfd19e979fbdb9b340cc8dd78a9ca72",tooltip="Checks if enough bytes are available to read."];
  Node22 -> Node24 [id="edge67_Node000022_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="neo::io::BinaryReader\l::ReadRawBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a890faf334a0500b4474a6b2f91e63e51",tooltip="Helper method to read raw bytes from either stream or memory."];
  Node24 -> Node23 [id="edge68_Node000024_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge69_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node22 [id="edge70_Node000001_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge71_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="neo::cryptography::\lCrypto::VerifySignature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_crypto.html#ab8f7b7fd3cbef11030acce3439ea5800",tooltip="Verifies a signature."];
  Node25 -> Node4 [id="edge72_Node000025_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node5 [id="edge73_Node000025_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node25 -> Node26 [id="edge74_Node000025_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node26 -> Node27 [id="edge75_Node000026_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node27 -> Node15 [id="edge76_Node000027_Node000015",color="steelblue1",style="solid",tooltip=" "];
}
