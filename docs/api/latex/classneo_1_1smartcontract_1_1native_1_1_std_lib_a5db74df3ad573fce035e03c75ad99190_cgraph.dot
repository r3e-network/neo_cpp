digraph "neo::smartcontract::native::StdLib::OnBase58CheckEncode"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::native::StdLib::OnBase58\lCheckEncode",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Handles the base58CheckEncode method."];
  Node1 -> Node2 [id="edge10_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::vm::StackItem\l::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#a1d67a8c02d58d56410378b997c2e7855",tooltip="Creates a primitive stack item."];
  Node2 -> Node3 [id="edge11_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::vm::StackItem\l::False",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#a759c1a70f6481936eb089083a5fa2d4e",tooltip="Gets the false stack item."];
  Node2 -> Node4 [id="edge12_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::vm::StackItem\l::True",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1vm_1_1_stack_item.html#ac5c88a02b66663d80e61942bb425391c",tooltip="Gets the true stack item."];
  Node1 -> Node5 [id="edge13_Node000001_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::cryptography::\lBase58::EncodeCheck",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_base58.html#aad9bf1248544b85ed8d9d01b1583bc30",tooltip="Encode bytes to Base58Check string (with checksum)."];
  Node5 -> Node6 [id="edge14_Node000005_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::cryptography::\lBase58::CalculateChecksum",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_base58.html#ad90529cf8e6bc33c8273b9df02155c95",tooltip="Calculate SHA256 double hash for checksum."];
  Node6 -> Node7 [id="edge15_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::cryptography::\lHash::Sha256",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_hash.html#a45b12e21ad2391d1919f3eb7b61f683a",tooltip="Computes SHA256 hash."];
  Node7 -> Node8 [id="edge16_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node7 -> Node9 [id="edge17_Node000007_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node5 -> Node10 [id="edge18_Node000005_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::cryptography::\lBase58::Encode",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_base58.html#a49f77f0e94585ee10b21838a3026e3fd",tooltip="Encode bytes to Base58 string."];
}
