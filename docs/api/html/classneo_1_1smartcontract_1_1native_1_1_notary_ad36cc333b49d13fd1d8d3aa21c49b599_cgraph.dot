digraph "neo::smartcontract::native::Notary::Verify"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::smartcontract\l::native::Notary::Verify",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Verifies the signature."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node1 -> Node3 [id="edge2_Node000001_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node3 -> Node2 [id="edge3_Node000003_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node3 -> Node4 [id="edge4_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node3 -> Node5 [id="edge5_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node3 -> Node6 [id="edge6_Node000003_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node3 -> Node7 [id="edge7_Node000003_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node3 -> Node8 [id="edge8_Node000003_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node3 -> Node9 [id="edge9_Node000003_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node3 -> Node10 [id="edge10_Node000003_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node1 -> Node11 [id="edge11_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::smartcontract\l::native::Notary::GetDepositFor",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_notary.html#a9986d1ea4cd7b93948fcc4776b97d0db",tooltip="Gets the deposit for the specified account."];
  Node11 -> Node12 [id="edge12_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::smartcontract\l::native::NativeContract\l::GetStorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#aaa080efcc4d7deced7aded7bb968cd9c",tooltip="Gets the storage key."];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::io::ByteVector\l::Append",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a08fe2080218bc11daedc416387e6f37e",tooltip="Appends data to the ByteVector."];
  Node13 -> Node4 [id="edge14_Node000013_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node13 -> Node10 [id="edge15_Node000013_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node12 -> Node14 [id="edge16_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::smartcontract\l::native::NativeContract\l::GetStoragePrefix",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#a6d9998fc6c7dbedcc447f403fddb6d08",tooltip="Gets the storage prefix."];
  Node12 -> Node15 [id="edge17_Node000012_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::io::ByteVector\l::Push",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a57eb840afcbc9cd7b784081f9f546dab",tooltip="Pushes a byte to the end of the ByteVector."];
  Node11 -> Node16 [id="edge18_Node000011_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::smartcontract\l::native::NativeContract\l::GetStorageValue",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#aa8eed221a7bf2bce103f7e1fef187e6c",tooltip="Gets the storage value."];
  Node16 -> Node17 [id="edge19_Node000016_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::smartcontract\l::native::NativeContract\l::CreateStorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#a5a9ec24cc4c1584fb00fdf32f614dbd8",tooltip="Creates a storage key with the specified prefix."];
  Node17 -> Node18 [id="edge20_Node000017_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::persistence::Storage\lKey::Create",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#ae7001770e96642cfdb2f878c6264bf51",tooltip="Creates a storage key with contract ID and prefix."];
  Node18 -> Node19 [id="edge21_Node000018_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::persistence::Storage\lKey::FillHeader",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a4a6ee8a47d7cfb0b3802d3697ddf571f",tooltip="Fills the header (contract ID + prefix) into a span."];
  Node18 -> Node20 [id="edge22_Node000018_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::persistence::Storage\lKey::StorageKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1persistence_1_1_storage_key.html#a26e71bde9629f81837c84d69d83fd75a",tooltip="Constructs an empty StorageKey."];
  Node11 -> Node21 [id="edge23_Node000011_Node000021",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="neo::io::BinaryReader\l::ReadInt64",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#aa8429b0320e5dee44f55d511457eb9bb",tooltip="Reads a 64-bit signed integer from the stream."];
  Node21 -> Node22 [id="edge24_Node000021_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="neo::io::BinaryReader\l::ReadRawBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a890faf334a0500b4474a6b2f91e63e51",tooltip="Helper method to read raw bytes from either stream or memory."];
  Node22 -> Node23 [id="edge25_Node000022_Node000023",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="neo::io::BinaryReader\l::EnsureAvailable",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#a2bfd19e979fbdb9b340cc8dd78a9ca72",tooltip="Checks if enough bytes are available to read."];
  Node11 -> Node24 [id="edge26_Node000011_Node000024",color="steelblue1",style="solid",tooltip=" "];
  Node24 [id="Node000024",label="neo::io::BinaryReader\l::ReadUInt32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_reader.html#adc2c9cfae535b86f63855d77cdb2662b",tooltip="Reads a 32-bit unsigned integer from the stream."];
  Node24 -> Node22 [id="edge27_Node000024_Node000022",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node25 [id="edge28_Node000001_Node000025",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="neo::smartcontract\l::native::PolicyContract\l::GetInstance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_policy_contract.html#ae73620726c425e67f0ccb59806a8829e",tooltip="Gets the instance."];
  Node1 -> Node26 [id="edge29_Node000001_Node000026",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="neo::ProtocolSettings\l::GetNetwork",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1_protocol_settings.html#ad306a2407147cac547a0e005441d3e51",tooltip="Gets the network magic number."];
  Node1 -> Node27 [id="edge30_Node000001_Node000027",color="steelblue1",style="solid",tooltip=" "];
  Node27 [id="Node000027",label="neo::smartcontract\l::native::Notary::GetNotary\lNodes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_notary.html#a79c597cc855b5de12aa3b4342fb13571",tooltip="Gets the notary nodes."];
  Node27 -> Node28 [id="edge31_Node000027_Node000028",color="steelblue1",style="solid",tooltip=" "];
  Node28 [id="Node000028",label="neo::smartcontract\l::native::NeoToken::\lGetInstance",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_neo_token.html#a90cb76fc97b70fbb68bd14545704e463",tooltip="Gets the instance."];
  Node1 -> Node29 [id="edge32_Node000001_Node000029",color="steelblue1",style="solid",tooltip=" "];
  Node29 [id="Node000029",label="neo::smartcontract\l::ApplicationEngine\l::GetProtocolSettings",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1_application_engine.html#af7d805438860e0b964982f0244ec21f6",tooltip="Gets the protocol settings."];
  Node1 -> Node30 [id="edge33_Node000001_Node000030",color="steelblue1",style="solid",tooltip=" "];
  Node30 [id="Node000030",label="neo::smartcontract\l::ApplicationEngine\l::GetScriptContainer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1_application_engine.html#a40215bb369943ae1d09ebcbc2e134544",tooltip="Gets the script container."];
  Node1 -> Node31 [id="edge34_Node000001_Node000031",color="steelblue1",style="solid",tooltip=" "];
  Node31 [id="Node000031",label="neo::smartcontract\l::native::NativeContract\l::GetScriptHash",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1native_1_1_native_contract.html#adee5386515d940f614d7f680b5d0edb7",tooltip="Gets the script hash."];
  Node1 -> Node32 [id="edge35_Node000001_Node000032",color="steelblue1",style="solid",tooltip=" "];
  Node32 [id="Node000032",label="neo::smartcontract\l::ApplicationEngine\l::GetSnapshot",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1smartcontract_1_1_application_engine.html#a4b11ba8a68aa0ac32ba0263c293ff1e4",tooltip="Gets the snapshot."];
  Node1 -> Node33 [id="edge36_Node000001_Node000033",color="steelblue1",style="solid",tooltip=" "];
  Node33 [id="Node000033",label="neo::io::UInt160::Serialize",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#a6d5c4e94dd0c4bfe7d076ce16c7f0c4a",tooltip="Serializes the UInt160 to a binary writer."];
  Node33 -> Node34 [id="edge37_Node000033_Node000034",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="neo::io::BinaryWriter\l::WriteBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#ae3c1b07c69e845d462faa589bac759e3",tooltip="Writes raw bytes to the stream."];
  Node34 -> Node35 [id="edge38_Node000034_Node000035",color="steelblue1",style="solid",tooltip=" "];
  Node35 [id="Node000035",label="neo::io::BinaryWriter\l::WriteRawBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#a4bc7c51a7a85bfff2189942cd831f840",tooltip="Helper method to write raw bytes to either stream or buffer."];
  Node1 -> Node36 [id="edge39_Node000001_Node000036",color="steelblue1",style="solid",tooltip=" "];
  Node36 [id="Node000036",label="neo::io::ByteVector\l::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#ac0d1a1751d25fde82c44ba55d9d68e24",tooltip="Gets the size of the ByteVector."];
  Node1 -> Node37 [id="edge40_Node000001_Node000037",color="steelblue1",style="solid",tooltip=" "];
  Node37 [id="Node000037",label="neo::io::ByteSpan::\lsubspan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a46cbc4490cd6d66b1bdf0fbc0d31a937",tooltip="Gets a subspan of this ByteSpan."];
  Node37 -> Node38 [id="edge41_Node000037_Node000038",color="steelblue1",style="solid",tooltip=" "];
  Node38 [id="Node000038",label="neo::io::ByteSpan::\lByteSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a88c53a63bc63f79ce1a29314b17fca51",tooltip="Constructs an empty ByteSpan."];
  Node1 -> Node39 [id="edge42_Node000001_Node000039",color="steelblue1",style="solid",tooltip=" "];
  Node39 [id="Node000039",label="neo::cryptography::\lCrypto::VerifySignature",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1_crypto.html#ab8f7b7fd3cbef11030acce3439ea5800",tooltip="Verifies a signature."];
  Node39 -> Node4 [id="edge43_Node000039_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node10 [id="edge44_Node000039_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node39 -> Node40 [id="edge45_Node000039_Node000040",color="steelblue1",style="solid",tooltip=" "];
  Node40 [id="Node000040",label="neo::cryptography::\lecc::ECPoint::ToArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ac78e405cf844e51af4f0830b2b392368",tooltip="Converts this point to a byte array (compressed format). This method matches the C# ECPoint...."];
  Node40 -> Node41 [id="edge46_Node000040_Node000041",color="steelblue1",style="solid",tooltip=" "];
  Node41 [id="Node000041",label="neo::cryptography::\lecc::ECPoint::ToBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#acaf3aa20394e9261354877c0e64c8f37",tooltip="Converts this point to a byte array."];
  Node41 -> Node5 [id="edge47_Node000041_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node42 [id="edge48_Node000001_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node42 [id="Node000042",label="neo::io::BinaryWriter\l::Write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_binary_writer.html#ac50767ade20a9099ba7e6b6ed684ef45",tooltip="Writes a boolean value to the stream."];
  Node42 -> Node42 [id="edge49_Node000042_Node000042",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node43 [id="edge50_Node000001_Node000043",color="steelblue1",style="solid",tooltip=" "];
  Node43 [id="Node000043",label="neo::io::UInt160::Zero",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#a28fac5fc86c25257391996114918ac94",tooltip="Gets a UInt160 with all bits set to zero."];
  Node43 -> Node44 [id="edge51_Node000043_Node000044",color="steelblue1",style="solid",tooltip=" "];
  Node44 [id="Node000044",label="neo::io::UInt160::UInt160",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#a975ac19e433b0ceb17f5b56454667fa5",tooltip="Constructs a UInt160 initialized to zero."];
}
