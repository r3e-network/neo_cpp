digraph "neo::ledger::Signer::DeserializeJson"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="neo::ledger::Signer\l::DeserializeJson",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Deserializes the Signer from a JSON reader."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="neo::cryptography::\lecc::ECPoint::FromBytes",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a76149bc8215c7297d3bd54d273bdaaca",tooltip="Creates an ECPoint from a byte array."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="neo::io::ByteVector\l::AsSpan",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a95791d958ed4ec88d32e811b51d90451",tooltip="Converts the ByteVector to a ByteSpan."];
  Node2 -> Node4 [id="edge3_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="neo::io::ByteSpan::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a0285a19eb5cd212ecd1079e0bc5e494c",tooltip="Gets a pointer to the data."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="neo::io::ByteVector\l::Data",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a971af50d2778c4435c924cf4b839e8a1",tooltip="Gets a pointer to the data."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="neo::cryptography::\lecc::ECPoint::ECPoint",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#ae4a83f7a5dcc95b65abd3e694adff846",tooltip="Constructs an empty ECPoint."];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="neo::cryptography::\lecc::ECPoint::SetInfinity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a1dd6d4a8073b2c4effa350fd1eaecb73",tooltip="Sets whether this point is at infinity."];
  Node2 -> Node8 [id="edge7_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="neo::cryptography::\lecc::ECPoint::SetX",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#abea50aec908986d1271d824ae00400b7",tooltip="Sets the X coordinate."];
  Node2 -> Node9 [id="edge8_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="neo::cryptography::\lecc::ECPoint::SetY",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1cryptography_1_1ecc_1_1_e_c_point.html#a052a97ced0b56150a48256bbece321c5",tooltip="Sets the Y coordinate."];
  Node2 -> Node10 [id="edge9_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="neo::io::ByteSpan::Size",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_span.html#a4a869430800a37dcbeefac6f36468fcb",tooltip="Gets the size of the ByteSpan."];
  Node1 -> Node11 [id="edge10_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="neo::io::JsonReader\l::HasKey",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_json_reader.html#ad2a7890156bf4a23baf63a1a4b95060f",tooltip="Checks if the JSON contains the specified key."];
  Node1 -> Node12 [id="edge11_Node000001_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="neo::io::UInt160::Parse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#aff15950166fb8a9a018e85e419500115",tooltip="Parses a hexadecimal string into a UInt160."];
  Node12 -> Node13 [id="edge12_Node000012_Node000013",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="neo::io::UInt160::TryParse",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#ab05ad86c095702985a3c48b025c6e0bc",tooltip="Tries to parse a hexadecimal string into a UInt160."];
  Node13 -> Node14 [id="edge13_Node000013_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="neo::io::UInt160::UInt160",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_u_int160.html#a975ac19e433b0ceb17f5b56454667fa5",tooltip="Constructs a UInt160 initialized to zero."];
  Node12 -> Node14 [id="edge14_Node000012_Node000014",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node15 [id="edge15_Node000001_Node000015",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="neo::io::ByteVector\l::ParseHex",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#ae43bc3a90c4246b1c90d580f69830d07",tooltip="Parses a hex string into a ByteVector (alias for FromHexString)."];
  Node15 -> Node16 [id="edge16_Node000015_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="neo::io::ByteVector\l::ByteVector",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#a8428939dbf8d0f3bf4047d1e2ee4e7a2",tooltip="Constructs an empty ByteVector."];
  Node15 -> Node17 [id="edge17_Node000015_Node000017",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="neo::io::ByteVector\l::FromHexString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_byte_vector.html#ae7660f8c804cb962e08a0f8cf0c71377",tooltip="Creates a ByteVector from a hex string."];
  Node17 -> Node16 [id="edge18_Node000017_Node000016",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge19_Node000001_Node000018",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="neo::io::JsonReader\l::ReadArray",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_json_reader.html#a2286a2af4ba8fd609d753cfd2b19f5ec",tooltip="Reads a JSON array from the JSON."];
  Node1 -> Node19 [id="edge20_Node000001_Node000019",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="neo::io::JsonReader\l::ReadInt32",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_json_reader.html#a26a50e4580529f1bbbf2e94ade9b0fbb",tooltip="Reads a 32-bit signed integer from the JSON."];
  Node1 -> Node20 [id="edge21_Node000001_Node000020",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="neo::io::JsonReader\l::ReadString",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classneo_1_1io_1_1_json_reader.html#abee15c3ce4f6e37ff476a804bd037372",tooltip="Reads a string from the JSON."];
}
