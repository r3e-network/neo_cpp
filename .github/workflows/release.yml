name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-release:
    name: Build Release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: neo-cpp-linux-x64
          - os: macos-latest
            asset_name: neo-cpp-macos-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup build environment (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libssl-dev \
            libboost-all-dev \
            liblz4-dev \
            libsnappy-dev \
            ninja-build

      - name: Setup build environment (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install cmake boost openssl@3 lz4 snappy ninja

      - name: Configure CMake
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=install \
            -GNinja

      - name: Build
        run: cmake --build build --config Release

      - name: Install
        run: cmake --install build

      - name: Package
        run: |
          tar -czf ${{ matrix.asset_name }}.tar.gz -C install .
          ls -lah *.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}.tar.gz

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Neo C++ ${{ github.ref_name }}
          body: |
            ## Neo C++ ${{ github.ref_name }}
            
            ### Downloads
            - Linux x64: `neo-cpp-linux-x64.tar.gz`
            - macOS x64: `neo-cpp-macos-x64.tar.gz`
            
            ### Installation
            ```bash
            tar -xzf neo-cpp-<platform>.tar.gz
            ./bin/neo_node --help
            ```
            
            ### What's Changed
            See [CHANGELOG.md](https://github.com/r3e-network/neo_cpp/blob/master/CHANGELOG.md) for details.
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}