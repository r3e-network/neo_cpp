# Simplified Dockerfile for Neo C++ node
# Uses minimal dependencies and pre-built binaries

FROM ubuntu:20.04

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install minimal runtime dependencies
RUN apt-get update && apt-get install -y \
    libboost-system1.71 \
    libboost-filesystem1.71 \
    libboost-thread1.71 \
    libssl1.1 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create neo user
RUN useradd -m -U -s /bin/bash neo

# Create directories
RUN mkdir -p /opt/neo/bin /opt/neo/config /opt/neo/data /opt/neo/logs && \
    chown -R neo:neo /opt/neo

# Copy pre-built binaries (assuming they exist)
COPY --chown=neo:neo build/tools/neo_cli_tool /opt/neo/bin/neo-cli
COPY --chown=neo:neo build/apps/test_simple_node /opt/neo/bin/neo-node

# Make binaries executable
RUN chmod +x /opt/neo/bin/*

# Copy configuration files
COPY --chown=neo:neo config/*.json /opt/neo/config/

# Create startup script
RUN echo '#!/bin/bash\n\
if [ -f /opt/neo/bin/neo-node ]; then\n\
    exec /opt/neo/bin/neo-node --config /opt/neo/config/testnet.json "$@"\n\
else\n\
    echo "Neo C++ Node - Binary not found"\n\
    echo "This is a placeholder container"\n\
    tail -f /dev/null\n\
fi' > /opt/neo/bin/start.sh && \
    chmod +x /opt/neo/bin/start.sh

# Switch to neo user
USER neo
WORKDIR /opt/neo

# Expose ports
EXPOSE 10332 10333 10334

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD test -f /opt/neo/bin/neo-node || exit 0

# Entry point
ENTRYPOINT ["/opt/neo/bin/start.sh"]